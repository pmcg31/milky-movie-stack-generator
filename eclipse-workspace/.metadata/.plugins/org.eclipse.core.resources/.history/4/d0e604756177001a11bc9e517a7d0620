package online.ideaup;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.attribute.BasicFileAttributeView;
import java.nio.file.attribute.BasicFileAttributes;
import java.nio.file.attribute.FileTime;
import java.util.ArrayList;
import java.util.Comparator;

public class mmsg implements Runnable {

	public static void main(String[] args) {
		if (args.length == 1) {
			File imageDir = new File(args[0]);
			if (imageDir.exists() && imageDir.isDirectory()) {
				new mmsg(imageDir).run();
			} else {
				System.out.println("'"+ imageDir +"' doesn't exist or is not a directory");
				System.exit(1);
			}
		} else {
			System.out.println("Sorry, Charlie");

		}
	}

	public mmsg(File imageDir) {
		_imageDir = imageDir;
	}
	
	
	@Override
	public void run() {
		File[] files = _imageDir.listFiles();
		ArrayList<File> images = new ArrayList<File>();
		
		if (files != null) {
			for (File f : files) {
				if (f.isFile() && f.getName().toLowerCase().endsWith("nef")) {
					images.add(f);
				}
			} 
			
			images.sort(new Comparator<File>() {

				@Override
				public int compare(File o1, File o2) {
					FileTime t1, t2;
					
					try {
						t1 = getCreationTime(o1);
						t2 = getCreationTime(o2);
						
						System.out.println(t1);
						return t1.compareTo(t2);
					}
					catch (IOException e) {
						System.out.println("********************** WTF?");
					}
					
					return 0;
				}
			});
			
			for (File f : images) {
				System.out.println(f.getName());
			}
		} else {
			System.out.println("file list is null! - "+ _imageDir);
		}

	}

	private FileTime getCreationTime(File file) throws IOException {
		Path p = Paths.get(file.getAbsolutePath());
		BasicFileAttributes view = Files.getFileAttributeView(p, BasicFileAttributeView.class).readAttributes();
		FileTime fileTime = view.creationTime();
		return fileTime;
	}

	private File _imageDir;
}
